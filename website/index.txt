h1. literate_maruku

h1. &#x2192; 'literate_maruku'


h2. What

Literate Maruku is a literate programming libary for ruby based on the markdown
libary maruku. This is basically what the name say, isn't it?


h2. Installing

<pre syntax="ruby">sudo gem install literate_maruku</pre>

h2. The basics

There are to possible accesses to the libary. A programming API and a command 
line interface. The first may be used to write better documented tests, 
for example. Just write a little bit of code in your test_helper and call
Literate Maruku there and your markdown formatted tests will be executed.

The command line interface may the be used inside of a rake task for example to
generate some html files out of your test files, that demonstrate their usage. 
We have used this approach in ContextR, so have a look there to get some input.

h2. Demonstration of usage

h3. The Markdown Syntax

Literate Maruku simply extends the functionality of Maruku and adds some methods
to make standard use cases easier. You may find detailed information about maruku at "their project page":http://maruku.rubyforge.org/ . They added some nice
features to 
"Markdown formatting":http://daringfireball.net/projects/markdown/syntax , esp.
the "meta data syntax":http://maruku.rubyforge.org/proposal.html which made
implementing literate maruku a charm.

Wanna see examples? Okay, here they are:

h4. Markdown

<pre><code>
This is a normal paragraph, followed by a plain old code block

    literate_maruku == maruku + ruby

And the following code block will not only be rendered, but also executed.

    def echo_block(string)
      (0...(text.size)).map{|i| text[0..i]}.reverse.join(" ... ")
    end
{: execute}

And, finally, the following block will be executed and its output will be 
rendered as well.

    echo_block("hallo")
{: execute attach_output}
</code></pre>

This is how you may write your ruby code. And this is what will be generated 
out of it:

h4. HTML



This is a normal paragraph, followed by a plain old code block

<pre><code>literate_maruku == maruku + ruby
</code></pre>

And the following code block will not only be rendered, but also executed.

  def echo_block(string)
    (0...(text.size)).map{|i| text[0..i]}.reverse.join(" ... ")
  end

And, finally, the following block will be executed and its output will be 
rendered as well.

  echo_block("hallo")
  >> "hello ... hell ... hel ... he ... h"


h3. The command line interface

Simply call @literate_maruku filename.mkd@ to load your markdown formatted ruby
files. This will execute the code but not generate any output. It basically works like a simpe @ruby filename.rb@ call, but without all the command line parameters the @ruby@ command supports.

If you like to generate some html files, append an additional parameter, which
tells literate_maruku where to put the output.  
@literate_maruku --output_path=test filename.mkd@ would file the output of 
@filename.mkd@ to @test/filename.html@. That's all, folks.

h3. The programming interface

To use Literate Maruku in your own special way simply use the 
@LiterateMaruku#require@ method.

    require 'literate_maruku'
    
    LiterateMaruku.require('filename.mkd') # or
    LiterateMaruku.require('filename.mkd', :output => "test")

These will have the same result as the command line examples.

If you are unhappy with these little possibilities, no problem: You may still
use the standard maruku interface to do with your markdown string, what you like
after require'ing literate_maruku the maruku code base is extended for the 
literate programming style.

h2. Other resources 

* "Mailing list":http://groups.google.com/group/rug-b
* "RDoc":http://rug-b.rubyforge.org/literate_maruku/rdoc

h2. How to submit patches

Read the "8 steps for fixing other people's code":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/ and for section "8b: Submit patch to Google Groups":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/#8b-google-groups, use the Google Group above.

The trunk repository is <code>svn://rubyforge.org/var/svn/rug-b/literate_maruku/trunk</code> for anonymous access.

h2. License

This code is free to use under the terms of the MIT license. 

h2. Contact

Comments are welcome. Send an email to "Gregor Schmidt":mailto:ruby@schmidtwisser.de or via the "mailing list":http://groups.google.com/group/literate_maruku

